worker_processes 1;
events { worker_connections 8192; }

http {
  map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
  }

  upstream collab_backends {
    # sticky by docId query param: ensures same doc -> same backend
    hash $arg_docId consistent;
    server app1:8080;
    server app2:8080;
    server app3:8080;
  }

  # Individual upstreams for forced routing
  upstream app1_backend {
    server app1:8080;
  }
  
  upstream app2_backend {
    server app2:8080;
  }
  
  upstream app3_backend {
    server app3:8080;
  }

  server {
    listen 80;

    # Proxy websocket connections with server hint support
    location /ws {
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $connection_upgrade;

      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;

      proxy_read_timeout 3600s;
      proxy_send_timeout 3600s;
      proxy_connect_timeout 60s;
      proxy_buffering off;

      # Route to specific server based on server parameter
      set $backend "collab_backends";
      if ($arg_server = "app1") {
        set $backend "app1_backend";
      }
      if ($arg_server = "app2") {
        set $backend "app2_backend";  
      }
      if ($arg_server = "app3") {
        set $backend "app3_backend";
      }

      proxy_pass http://$backend;
    }

    # Proxy other backend HTTP (REST, health)
    location / {
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_pass http://collab_backends;
    }
  }
}
